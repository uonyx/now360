//
//  cx_list.h
//
//  Created by Ubaka Onyechi on 18/08/2012.
//  Copyright (c) 2012 uonyechi.com. All rights reserved.
//

#ifndef CX_LIST_H
#define CX_LIST_H

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "cx_system.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

// basic singly-linked list

typedef struct cx_list_node
{
  const void *data;
  struct cx_list_node *next;
} cx_list_node;

typedef cx_list_node cx_list;

typedef int (*cx_list_sort_cmp_func) (const void *, const void *);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

cx_list *cx_list_insert (cx_list *list, const void *data);
cx_list *cx_list_remove (cx_list *list, const void *data);
cx_list *cx_list_reverse (cx_list *list);
cx_list *cx_list_sort (cx_list *list, cx_list_sort_cmp_func cmpfunc);
cxu32 cx_list_to_array (cx_list *list, cx_list_node *dest, int cxu32);
bool cx_list_exists (cx_list *list, const void *data);
void cx_list_free (cx_list *list);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
