//
//  cx_utility.h
//
//  Created by Ubaka Onyechi on 19/02/2012.
//  Copyright (c) 2012 uonyechi.com. All rights reserved.
//

#ifndef CX_UTILITY_H
#define CX_UTILITY_H

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "cx_system.h"
#include "cx_matrix4x4.h"
#include "cx_vector2.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

cxu16 cx_util_byte_swap_u16 (cxu16 val);
cxu32 cx_util_byte_swap_u32 (cxu32 val);
cxu64 cx_util_byte_swap_u64 (cxu64 val);
cxu8* cx_util_byte_swap (cxu8 *bytes, cxu32 size);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

bool cx_util_is_power_of_2 (cxu32 num);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

void cx_util_word_filter (const char *text, const char **words, cxu32 wordCount, char subchar);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

void cx_util_world_space_to_screen_space (cxf32 width, cxf32 height, const cx_mat4x4 *proj, const cx_mat4x4 *view, 
                                          const cx_vec4 *world, cx_vec2 *screen, cxf32 *depth, cxf32 *zScale);

void cx_util_screen_space_to_world_space (cxf32 width, cxf32 height, const cx_mat4x4 *proj, const cx_mat4x4 *view, 
                                          const cx_vec2 *screen, cx_vec4 *world, cxf32 depth, bool ray);

void cx_util_look_at (cx_mat4x4 *m, const cx_vec4 * CX_RESTRICT eye, const cx_vec4 * CX_RESTRICT target, 
                      const cx_vec4 * CX_RESTRICT updir);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
