//
//  cx_colour.h
//  earthnews
//
//  Created by Ubaka  Onyechi on 24/01/2012.
//  Copyright (c) 2012 SonOfLagos. All rights reserved.
//

#ifndef CX_COLOUR_H
#define CX_COLOUR_H

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "cx_defines.h"
#include "cx_math.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct cx_colour
{
  cxu8 r, g, b, a;
} cx_colour;

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_colour_set (cx_colour *colour, cxu8 r, cxu8 g, cxu8 b, cxu8 a);
static CX_INLINE void cx_colour_set_f32 (cx_colour *colour, cxf32 r, cxf32 g, cxf32 b, cxf32 a);
static CX_INLINE void cx_colour_get_f32 (const cx_colour *colour, cxf32 *o_r, cxf32 *o_g, cxf32 *o_b, cxf32 *o_a);
static CX_INLINE const cx_colour *cx_colour_black (void);
static CX_INLINE const cx_colour *cx_colour_white (void);
static CX_INLINE const cx_colour *cx_colour_red (void);
static CX_INLINE const cx_colour *cx_colour_green (void);
static CX_INLINE const cx_colour *cx_colour_blue (void);
static CX_INLINE const cx_colour *cx_colour_yellow (void);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_colour_set (cx_colour *colour, cxu8 r, cxu8 g, cxu8 b, cxu8 a)
{
  colour->r = r;
  colour->g = g;
  colour->b = b;
  colour->a = a;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_colour_set_f32 (cx_colour *colour, cxf32 r, cxf32 g, cxf32 b, cxf32 a)
{
  r = cx_clamp (r, 0.0f, 1.0f);
  g = cx_clamp (g, 0.0f, 1.0f);
  b = cx_clamp (b, 0.0f, 1.0f);
  a = cx_clamp (a, 0.0f, 1.0f);
  
  colour->r = (cxu8) (r * 255.0f);
  colour->g = (cxu8) (g * 255.0f);
  colour->b = (cxu8) (b * 255.0f);
  colour->a = (cxu8) (a * 255.0f);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_colour_get_f32 (const cx_colour *colour, cxf32 *o_r, cxf32 *o_g, cxf32 *o_b, cxf32 *o_a)
{
  *o_r = (cxf32) colour->r / 255.0f;
  *o_g = (cxf32) colour->g / 255.0f;
  *o_b = (cxf32) colour->b / 255.0f;
  *o_a = (cxf32) colour->a / 255.0f;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE const cx_colour *cx_colour_black (void)
{
  static cx_colour black = { 0, 0, 0, 255 };
  return &black;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE const cx_colour *cx_colour_white (void)
{
  static cx_colour white = { 255, 255, 255, 255 };
  return &white;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE const cx_colour *cx_colour_red (void)
{
  static cx_colour red = { 255, 0, 0, 255 };
  return &red;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE const cx_colour *cx_colour_green (void)
{
  static cx_colour green = { 0, 255, 0, 255 };
  return &green;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE const cx_colour *cx_colour_blue (void)
{
  static cx_colour blue = { 0, 0, 255, 255 };
  return &blue;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE const cx_colour *cx_colour_yellow (void)
{
  static cx_colour yellow = { 255, 255, 0, 255 };
  return &yellow;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
