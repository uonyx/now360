//
//  cx_matrix3x3.h
//  earthnews
//
//  Created by Ubaka  Onyechi on 14/02/2012.
//  Copyright (c) 2012 SonOfLagos. All rights reserved.
//

#ifndef CX_MATRIX3X3_H
#define CX_MATRIX3X3_H

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

union cx_mat3x3
{
  cxf32 f9 [9];
};

typedef union cx_mat3x3 cx_mat3x3;

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_mat3x3_identity (cx_mat3x3 *m);
static CX_INLINE void cx_mat3x3_zero (cx_mat3x3 *m);
static CX_INLINE void cx_mat3x3_set (cx_mat3x3 * CX_RESTRICT m, cxf32 f9 [9]);
static CX_INLINE void cx_mat3x3_transpose (cx_mat3x3 * CX_RESTRICT t, const cx_mat3x3 * CX_RESTRICT m);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_mat3x3_identity (cx_mat3x3 *m)
{
  // column 1
  m->f9 [0] = 1.0f;
  m->f9 [1] = 0.0f;
  m->f9 [2] = 0.0f;
  // column 2
  m->f9 [3] = 0.0f;
  m->f9 [4] = 1.0f;
  m->f9 [5] = 0.0f;
  // column 3
  m->f9 [6] = 0.0f;
  m->f9 [7] = 0.0f;
  m->f9 [8] = 1.0f;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_mat3x3_zero (cx_mat3x3 *m)
{
  m->f9 [0] = 0.0f;
  m->f9 [1] = 0.0f;
  m->f9 [2] = 0.0f;
  m->f9 [3] = 0.0f;
  m->f9 [4] = 0.0f;
  m->f9 [5] = 0.0f;
  m->f9 [6] = 0.0f;
  m->f9 [7] = 0.0f;
  m->f9 [8] = 0.0f;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_mat3x3_set (cx_mat3x3 * CX_RESTRICT m, cxf32 f9 [9])
{
  m->f9 [0] = f9 [0];
  m->f9 [1] = f9 [1];
  m->f9 [2] = f9 [2];
  m->f9 [3] = f9 [3];
  m->f9 [4] = f9 [4];
  m->f9 [5] = f9 [5];
  m->f9 [6] = f9 [6];
  m->f9 [7] = f9 [7];
  m->f9 [8] = f9 [8];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

static CX_INLINE void cx_mat3x3_transpose (cx_mat3x3 * CX_RESTRICT t, const cx_mat3x3 * CX_RESTRICT m)
{
  t->f9 [0] = m->f9 [0];
  t->f9 [1] = m->f9 [3];
  t->f9 [2] = m->f9 [6];
  t->f9 [3] = m->f9 [1];
  t->f9 [4] = m->f9 [4];
  t->f9 [5] = m->f9 [7];
  t->f9 [6] = m->f9 [2];
  t->f9 [7] = m->f9 [5];
  t->f9 [8] = m->f9 [8];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
